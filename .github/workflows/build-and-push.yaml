name: ci

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  bake:
    name: Build/push images/Compose files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: cloud
          endpoint: ${{ secrets.DOCKER_BUILDER_ENDPOINT }}

      - name: Set tag for builds
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "IMAGE_TAG=dev" >> $GITHUB_ENV
          else
            TAG="${GITHUB_REF#refs/tags/}"
            echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV
          fi

      - name: Build and push tagged image
        uses: docker/bake-action@v6
        with:
          push: true

      # Ensure Compose v2.39.3+ is available (includes bug fixes for publishing)
      # Can remove this action once default runners include it
      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
        with:
          version: v2.39.3

      - name: Publish Compose files
        run: |
          export CONTENT_PATH="/placeholder"
          
          docker compose version

          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            sed -i "s/:latest/:dev/g" compose.run.yaml
            sed -i "s/:latest/:dev/g" compose.content-dev.yaml
            echo "y" | docker compose -f compose.run.yaml publish dockersamples/labspace:dev --with-env -y
            echo "y" | docker compose -f compose.content-dev.yaml publish dockersamples/labspace-content-dev:dev --with-env -y
          else
            TAG="${GITHUB_REF#refs/tags/}"

            sed -i "s/:latest/:${TAG}/g" compose.run.yaml
            sed -i "s/:latest/:${TAG}/g" compose.content-dev.yaml

            echo "y" | docker compose -f compose.run.yaml publish dockersamples/labspace:latest --with-env -y
            echo "y" | docker compose -f compose.run.yaml publish dockersamples/labspace:${TAG} --with-env -y
            echo "y" | docker compose -f compose.content-dev.yaml publish dockersamples/labspace-content-dev:latest --with-env -y
            echo "y" | docker compose -f compose.content-dev.yaml publish dockersamples/labspace-content-dev:${TAG} --with-env -y
          fi
